div(class="ui segment" id="chart")
	if (user)
		h3 What are you most looking forward to in the 'three weeks of nothing'? 
		table(class="ui very basic compact single line unstackable  table")
			tr(v-for="event in events")
				td(class="five wide") {{ $key }} 
					span(v-if="voted") ({{ (event.votes*100/total)+'%' }})
				td(class="eleven wide")
					a(v-if="!voted" href="#" v-on:click.prevent="postVote(event.id)" transition="fade") Vote
					svg(v-if="voted" width="100%" height="1em" transition="slide")
						poll-bar(:width="(event.votes*100/total)+'%'")

		script.
			Vue.component('pollBar', {
				props: ['width'],
				template: '<rect :width="width" height="100%" style="fill:rgb(219,40,40); transition: width 0.5s"></rect>'
			});

			var poll = new Vue({
				el: "#chart",
				data: {
					events: {
						'Grey Day' : {id: null, votes: 0},
						'Phoenix Ball' : {id: null, votes: 0},
						"VP's Day Out" : {id: null, votes: 0},
						"George Palmer Rugby Sevens" : {id: null, votes: 0},
						"Last JCR meeting of term": {id: null, votes: 0},
						'Other': {id: null, votes: 0}
					},
					total : 1,
					voted: false
				},
				methods: {
					getVotes: function () {
						var self = this;
						$.get('/api/poll', function (response) {
							self.voted = response.data.voted;
							self.total = 0;
							var results = response.data.results;
							for(i = 0; i<results.length; i++) {
							console.log(results[i].name)
								self.events[results[i].name].id = results[i].id;
								if (self.voted) {
									self.events[results[i].name].votes = results[i].votes;
									self.total += results[i].votes;
								}
							}
							self.total = (self.total==0) ? 1: self.total;
						}, 'json');
					},
					postVote: function (option) {
						console.log(option)
						var self = this;
						$.post('/api/poll', {option_id: option}, function (response) {
							console.log(response);
							self.getVotes();
						}, 'json')
					}
				},
				created: function() {
					var self = this;
					self.getVotes();
					setInterval(function(){self.getVotes();}, 15*1000)
				},
			});

			Vue.transition('fade', {
			  css: false,
			  enter: function (el, done) {
			    // element is already inserted into the DOM
			    // call done when animation finishes.
			    $(el).transition({
			    	animation: 'fade in',
			    	duration: '0.3s'
			   });
			  },
			  enterCancelled: function (el) {
			    $(el).transition('stop');
			  },
			  leave: function (el, done) {
			    // same as enter
			    $(el).transition({
			    	animation: 'fade out',
			    	duration: '0.3s'
			    });
			  },
			  leaveCancelled: function (el) {
			    $(el).transition('stop');
			  }
			})

			Vue.transition('slide', {
			  css: false,
			  enter: function (el, done) {
			    // element is already inserted into the DOM
			    // call done when animation finishes.
			    $(el).transition({
			    	animation: 'slide right in',
			    	duration: '1s'
			   });
			  },
			  enterCancelled: function (el) {
			    $(el).transition('stop');
			  },
			  leave: function (el, done) {
			    // same as enter
			    $(el).transition({
			    	animation: 'slide right out',
			    	duration: '1s'
			    });
			  },
			  leaveCancelled: function (el) {
			    $(el).transition('stop');
			  }
			})
	else
		div(class="ui stackable grid")
			div(class="six wide middle aligned column")
				div(class="ui header") Grey College JCR
					div(class="sub header") The community of students that make up the life and soul of Grey College.
			div(class="ten wide column")
				img(class="ui fluid image" src="/images/promos/grey.png")