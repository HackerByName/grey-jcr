- var title = 'Events Calendar'

doctype html
html
	head
		include ../head.jade
		script(src="/javascripts/vue.js")
	body
		div(class='ui container')
			include ../header.jade
			include ../menu.jade
			h2(class="ui header")= title

			div(class="ui vertical segment" id="calendar")
				h3(class="ui header") {{ months[month-1] }} {{ year }}
				table(class="ui celled fixed seven column table")
					thead: tr
						th Monday
						th Tuesday
						th Wednesday
						th Thursday
						th Friday
						th Saturday
						th Sunday
					tbody
						tr(v-for="n in weeks")
							td(v-for="i in 7")
								day(:cell-no="7*n + i + 1")
					tfoot: tr
						th(colspan="7")
							a(class="ui left floated button" v-on:click='prevMonth')
								i(class="left arrow icon")
								| {{ (month>1) ? months[month - 2] : months[11] }} {{ (month>1) ? year : year-1 }}
							a(class="ui right floated button" v-on:click='nextMonth')
								| {{ (month<12) ? months[month] : months[0] }} {{ (month<12) ? year : year+1 }}
								i(class="right arrow icon")

		include ../footer.jade

		script.
			Vue.component('day', {
				props: ['cellNo'],
				computed: {
					day: function () {return this.cellNo - this.$root.startNo + 1},
					date: function () { return new Date(2016, this.$root.month - 1, this.day)},
					currentMonth: function () {return (this.date.getMonth() + 1 == this.$root.month)},
					events: function () {
						var day = this.day;
						return events = (this.$root.allEvents).filter(
							function (item) {
								return (item.timestamp.getDate() == day);
							}
						);
					}
				},
				template: '<div class="cell"><div class="ui sub header" v-if="currentMonth">{{ day }}</div><event v-for="event in events" :event-name="event.name"></event></div>',
				components: {
					'event': {
						props: ['eventName'],
						template: '<a class="ui label">{{ eventName }}</a>'
					}
				}
			});

			var calendar = new Vue({
				el: "#calendar",
				data: {
					months: ["January", "February", "March","April", "May", "June","July", "August", "September","October", "November", "December"],
					year: 2016,
					month: 5,
					allEvents: []
				},
				computed: {
					start: function () { return new Date(this.year, this.month-1, 1) },
					startNo: function () {
						startNo = this.start.getDay();
						return (startNo==0) ? 7: startNo;
					},
					end: function () { return new Date(this.year, this.month, 0) },
					days: function () { return this.end.getDate(); },
					weeks: function () {
						var weeks = (this.days%7 == 0 ? 0 : 1) + Math.floor(this.days/7)
						return ((this.end.getDay()+6)%7 < (this.start.getDay()+6)%7) ? weeks + 1 : weeks;
					}
				},
				methods: {
					fetchEvents: function() {
						var self = this;
						$("#calendar").addClass('loading');
						$.get('/api/events/'+self.year+'/'+self.month, function(events) {
							if (!events) {
								self.allEvents = [];
							} else {
								for (var i = 0; i < events.length; i++ ){
									events[i].timestamp = new Date(events[i].timestamp)
								}
								self.allEvents = events;
								$("#calendar").removeClass('loading');
							}
						}, 'json');
					},
					prevMonth: function () {
						console.log('test');
						if (this.month == 1) {
							this.month = 12;
							this.year = year - 1;
						} else {
							this.month = this.month - 1;
						}
					},
					nextMonth: function () {
						if (this.month == 12) {
							this.month = 1;
							this.year = year + 1;
						} else {
							this.month = this.month + 1;
						}
					}
				},
				created: function() { this.fetchEvents(); },
				watch:{
					'year + month': 'fetchEvents'
				}
			});

			

			